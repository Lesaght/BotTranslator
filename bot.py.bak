#!/usr/bin/env python3
"""
Text Master Bot - Telegram –±–æ—Ç –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, 
–ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ —Ä–µ—á—å —Å —Ä–µ–≥—É–ª–∏—Ä—É–µ–º–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é.

–ê–≤—Ç–æ—Ä: –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ Replit
–í–µ—Ä—Å–∏—è: 1.0.0
–î–∞—Ç–∞: –ú–∞–π 2025
–õ–∏—Ü–µ–Ω–∑–∏—è: MIT
"""
import os
import sys
import logging
import tempfile

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from constants import (
    SPEED_OPTIONS, DEFAULT_LANGUAGE, DEFAULT_SPEED,
    DEFAULT_AUDIO_LANGUAGE, AVAILABLE_AUDIO_LANGUAGES,
    APP_NAME, APP_VERSION, VOICE_TYPES
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
UPLOAD_FOLDER = 'uploads'
os.makedirs(UPLOAD_FOLDER, exist_ok=True)

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞."""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å —Ç–æ–∫–µ–Ω–æ–º
    if not os.environ.get('TELEGRAM_BOT_TOKEN'):
        logger.error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è')
        print("\033[91m–û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\033[0m")
        print("\033[93m–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è.\033[0m")
        return 1

    # –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
    try:
        from telegram.ext import Updater, CommandHandler, MessageHandler, CallbackQueryHandler, Filters
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        from constants import SPEED_OPTIONS, DEFAULT_LANGUAGE, DEFAULT_SPEED
        from translator import translate_text, get_available_languages
        from text_to_speech import text_to_speech, adjust_audio_speed
        from ocr import extract_text_from_image
        from user_preferences import UserPreferences
    except ImportError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print(f"\033[91m–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª–µ–π: {e}\033[0m")
        print("\033[93m–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:\033[0m")
        print("pip install python-telegram-bot==13.15 deep-translator gtts pydub pytesseract pillow")
        return 1

    # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
    user_prefs = {}

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    def start_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start."""
        user_id = update.effective_user.id
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if user_id not in user_prefs:
            user_prefs[user_id] = UserPreferences(user_id)
        
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
        keyboard = [
            [InlineKeyboardButton("üåü –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞", callback_data="show_features")],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="back_to_settings")],
            [InlineKeyboardButton("üéß –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", callback_data="show_audio_languages")],
            [InlineKeyboardButton("üåé –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞", callback_data="show_languages")],
            [InlineKeyboardButton("üîä –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏", callback_data="show_speeds")],
            [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")],
            [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="show_help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        welcome_text = (
            f"üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ {APP_NAME}!*\n\n"
            "üîç *–Ø —É–º–µ—é:*\n"
            "‚Ä¢ üì∑ ‚Üí üìù –ò–∑–≤–ª–µ–∫–∞—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
            "‚Ä¢ üåé –ü–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Ç–µ–∫—Å—Ç –Ω–∞ —Ä–∞–∑–Ω—ã–µ —è–∑—ã–∫–∏\n"
            "‚Ä¢ üîä –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å\n\n"
            "üìã *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:*\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å —Ç–µ–∫—Å—Ç–æ–º\n"
            "‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–µ –æ–ø—Ü–∏–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ\n\n"
            "üëâ –ù–∞—á–Ω–∏—Ç–µ —Å–µ–π—á–∞—Å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ/—Ç–µ–∫—Å—Ç.\n\n"
            f"üîπ –í–µ—Ä—Å–∏—è: {APP_VERSION}"
        )
        
        update.message.reply_text(welcome_text, reply_markup=reply_markup, parse_mode='Markdown')

    def help_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help."""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
        
        help_text = (
            f"üìö *–°–ø—Ä–∞–≤–∫–∞ –ø–æ {APP_NAME}* üìö\n\n"
            "ü§ñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n"
            "‚Ä¢ /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"
            "‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n"
            "‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n"
            "‚Ä¢ /language - –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞\n"
            "‚Ä¢ /audio_language - –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è\n"
            "‚Ä¢ /speed - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏\n\n"
            "üîÑ *–§—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞:*\n"
            "‚Ä¢ üì∑ *OCR* - —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n"
            "‚Ä¢ üåê *–ü–µ—Ä–µ–≤–æ–¥* - –Ω–∞ 100+ —è–∑—ã–∫–æ–≤ –º–∏—Ä–∞\n"
            "‚Ä¢ üéß *Text-to-Speech* - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –≥–æ–ª–æ—Å\n\n"
            "üí° *–°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:*\n"
            "‚Ä¢ –î–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —á–µ—Ç–∫–∏–µ —Ñ–æ—Ç–æ\n"
            "‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
            "‚Ä¢ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–π—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏ –ø–æ–¥ —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è\n\n"
            "üîπ –°–æ–∑–¥–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π OCR, Google Translate –∏ gTTS\n"
            f"üî∏ –í–µ—Ä—Å–∏—è {APP_VERSION} | 2025"
        )
        
        update.message.reply_text(help_text, parse_mode='Markdown')

    def settings_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /settings."""
        user_id = update.effective_user.id
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if user_id not in user_prefs:
            user_prefs[user_id] = UserPreferences(user_id)
        
        keyboard = [
            [InlineKeyboardButton("üåé –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞", callback_data="show_languages")],
            [InlineKeyboardButton("üéß –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", callback_data="show_audio_languages")],
            [InlineKeyboardButton("üîä –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏", callback_data="show_speeds")],
            [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")]
        ]
        
        # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —è–∑—ã–∫–æ–≤ –∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
        language_emojis = {
            'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
            'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
            'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
        }
        
        language_code = user_prefs[user_id].language
        language_emoji = language_emojis.get(language_code, 'üåê')
        
        audio_language_code = user_prefs[user_id].audio_language
        audio_language_emoji = language_emojis.get(audio_language_code, 'üéß')
        
        # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        speed_emojis = {
            0.5: "üê¢", 
            0.75: "üö∂", 
            1.0: "üèÉ", 
            1.25: "üö¥", 
            1.5: "üèéÔ∏è", 
            2.0: "üöÄ"
        }
        speed = user_prefs[user_id].speed
        speed_emoji = speed_emojis.get(speed, "üîä")
        
        current_settings = (
            f"‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {APP_NAME}*\n\n"
            f"{language_emoji} *–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:* {user_prefs[user_id].language_name}\n"
            f"{audio_language_emoji} *–Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:* {user_prefs[user_id].audio_language_name}\n"
            f"{speed_emoji} *–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏:* {user_prefs[user_id].speed}x\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
        )
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text(
            current_settings,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )

    def language_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /language."""
        show_language_options(update, context)

    def speed_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /speed."""
        show_speed_options(update, context)
        
    def audio_language_command(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /audio_language."""
        show_audio_language_options(update, context)

    def show_language_options(update, context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–∞."""
        languages = get_available_languages()
        
        # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —è–∑—ã–∫–∞–º–∏ –∏ —ç–º–æ–¥–∑–∏
        keyboard = []
        current_row = []
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
        language_emojis = {
            'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
            'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
            'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
        }
        
        # –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —è–∑—ã–∫–∏
        popular_languages = []
        other_languages = []
        
        for code, name in languages.items():
            if code in language_emojis:
                popular_languages.append((code, name, language_emojis[code]))
            else:
                other_languages.append((code, name, 'üåê'))
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —è–∑—ã–∫–∏
        popular_languages.sort(key=lambda x: x[1])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —è–∑—ã–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        for code, name, emoji in popular_languages:
            if len(current_row) == 2:
                keyboard.append(current_row)
                current_row = []
            current_row.append(InlineKeyboardButton(f"{emoji} {name}", callback_data=f"lang_{code}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —è–∑—ã–∫–∏
        other_languages.sort(key=lambda x: x[1])
        for code, name, emoji in other_languages:
            if len(current_row) == 2:
                keyboard.append(current_row)
                current_row = []
            current_row.append(InlineKeyboardButton(f"{emoji} {name}", callback_data=f"lang_{code}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        if current_row:
            keyboard.append(current_row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ callback, —Ç–∞–∫ –∏ –ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
        language_header = "üåé *–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:*\n\n" \
                         "–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —è–∑—ã–∫–∏ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã –≤ –Ω–∞—á–∞–ª–µ —Å–ø–∏—Å–∫–∞\n" \
                         "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
        
        if hasattr(update, 'callback_query'):
            update.callback_query.edit_message_text(
                language_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                language_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

    def show_voice_type_options(update, context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–ø—ã –≥–æ–ª–æ—Å–æ–≤ –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è."""
        keyboard = []
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –≥–æ–ª–æ—Å–æ–≤
        voice_type_emojis = {
            "normal": "üîä",
            "slow": "üê¢",
            "clear": "üîç",
            "emotional": "üòÄ"
        }
        
        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞
        for voice_code, voice_name in VOICE_TYPES.items():
            emoji = voice_type_emojis.get(voice_code, "üé§")
            keyboard.append([InlineKeyboardButton(f"{emoji} {voice_name}", callback_data=f"voice_{voice_code}")])
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ callback, —Ç–∞–∫ –∏ –ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
        voice_header = "üé§ *–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≥–æ–ª–æ—Å–∞:*\n\n" \
                      "üîä *–û–±—ã—á–Ω—ã–π* - –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏–µ\n" \
                      "üê¢ *–ú–µ–¥–ª–µ–Ω–Ω—ã–π* - –ß–µ—Ç–∫–æ–µ –ø—Ä–æ–∏–∑–Ω–æ—à–µ–Ω–∏–µ\n" \
                      "üîç *–ß–µ—Ç–∫–∏–π* - –û—Å–æ–±–µ–Ω–Ω–æ —á–µ—Ç–∫–∞—è –∞—Ä—Ç–∏–∫—É–ª—è—Ü–∏—è\n" \
                      "üòÄ *–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π* - –° –∏–Ω—Ç–æ–Ω–∞—Ü–∏–µ–π –∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ–º"
        
        if hasattr(update, 'callback_query'):
            update.callback_query.edit_message_text(
                voice_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                voice_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
    
    def show_audio_language_options(update, context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è."""
        # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —è–∑—ã–∫–∞–º–∏ –∏ —ç–º–æ–¥–∑–∏
        keyboard = []
        current_row = []
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
        language_emojis = {
            'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
            'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
            'pt': 'üáµüáπ'
        }
        
        # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        audio_languages = []
        
        for code, name in AVAILABLE_AUDIO_LANGUAGES.items():
            emoji = language_emojis.get(code, 'üéß')
            audio_languages.append((code, name, emoji))
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º —è–∑—ã–∫–∏ –ø–æ –∏–º–µ–Ω–∏
        audio_languages.sort(key=lambda x: x[1])
        
        # –î–æ–±–∞–≤–ª—è–µ–º —è–∑—ã–∫–∏ –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        for code, name, emoji in audio_languages:
            if len(current_row) == 2:
                keyboard.append(current_row)
                current_row = []
            current_row.append(InlineKeyboardButton(f"{emoji} {name}", callback_data=f"audio_lang_{code}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        if current_row:
            keyboard.append(current_row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ callback, —Ç–∞–∫ –∏ –ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã
        language_header = "üéß *–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:*\n\n" \
                        "–Ø–∑—ã–∫, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å—Å—è –∞—É–¥–∏–æ\n" \
                        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá"
        
        if hasattr(update, 'callback_query'):
            update.callback_query.edit_message_text(
                language_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                language_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
    
    def show_speed_options(update, context):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏."""
        keyboard = []
        row = []
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        speed_emojis = {
            0.5: "üê¢", 
            0.6: "ü¶•",
            0.7: "üêå",
            0.8: "üêï",
            0.9: "üö∂", 
            1.0: "üèÉ", 
            1.1: "üèÑ",
            1.25: "üö¥", 
            1.5: "üèéÔ∏è", 
            1.75: "‚úàÔ∏è",
            2.0: "üöÄ"
        }
        
        for speed in SPEED_OPTIONS:
            if len(row) == 2:
                keyboard.append(row)
                row = []
            emoji = speed_emojis.get(speed, "üîä")
            row.append(InlineKeyboardButton(f"{emoji} {speed}x", callback_data=f"speed_{speed}"))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–Ω–æ–ø–∫–∏
        if row:
            keyboard.append(row)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        keyboard.append([
            InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_to_settings"),
            InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")
        ])
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ callback, —Ç–∞–∫ –∏ –ø—Ä—è–º—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å –∫—Ä–∞—Å–∏–≤—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        speed_header = "üîä *–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Ä–µ—á–∏:*\n\n" \
                      "üê¢ *0.5x* - –ö—Ä–∞–π–Ω–µ –º–µ–¥–ª–µ–Ω–Ω–æ\n" \
                      "ü¶• *0.6x* - –û—á–µ–Ω—å –º–µ–¥–ª–µ–Ω–Ω–æ\n" \
                      "üêå *0.7x* - –ú–µ–¥–ª–µ–Ω–Ω–æ\n" \
                      "üêï *0.8x* - –ù–µ—Ç–æ—Ä–æ–ø–ª–∏–≤–æ\n" \
                      "üö∂ *0.9x* - –ß—É—Ç—å –Ω–∏–∂–µ –Ω–æ—Ä–º—ã\n" \
                      "üèÉ *1.0x* - –û–±—ã—á–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å\n" \
                      "üèÑ *1.1x* - –ß—É—Ç—å –≤—ã—à–µ –Ω–æ—Ä–º—ã\n" \
                      "üö¥ *1.25x* - –ë—ã—Å—Ç—Ä–æ\n" \
                      "üèéÔ∏è *1.5x* - –û—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ\n" \
                      "‚úàÔ∏è *1.75x* - –°–≤–µ—Ä—Ö–±—ã—Å—Ç—Ä–æ\n" \
                      "üöÄ *2.0x* - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å"
        
        if hasattr(update, 'callback_query'):
            update.callback_query.edit_message_text(
                speed_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        else:
            update.message.reply_text(
                speed_header,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )

    def handle_button(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –≤ –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ."""
        query = update.callback_query
        query.answer()
        
        user_id = update.effective_user.id
        if user_id not in user_prefs:
            user_prefs[user_id] = UserPreferences(user_id)
        
        callback_data = query.data
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞
        if callback_data.startswith("copy_text_"):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
            text_user_id = callback_data.split("_")[-1]
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç
            original_text = context.user_data.get(callback_data)
            
            if original_text:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                query.message.reply_text(
                    original_text,
                    parse_mode=None  # –ë–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                )
                query.answer("–¢–µ–∫—Å—Ç –≥–æ—Ç–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!")
            else:
                query.answer("–û—à–∏–±–∫–∞: —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞
        elif callback_data.startswith("copy_tr_"):
            # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ callback_data
            tr_user_id = callback_data.split("_")[-1]
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–µ—Ä–µ–≤–æ–¥
            translated_text = context.user_data.get(callback_data)
            
            if translated_text:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –≤–∏–¥–µ –æ–±—ã—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                query.message.reply_text(
                    translated_text,
                    parse_mode=None  # –ë–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                )
                query.answer("–ü–µ—Ä–µ–≤–æ–¥ –≥–æ—Ç–æ–≤ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è!")
            else:
                query.answer("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        elif callback_data == "show_languages":
            show_language_options(update, context)
        
        elif callback_data == "show_speeds":
            show_speed_options(update, context)
        
        elif callback_data == "show_features":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
            features_text = (
                f"üåü *–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ {APP_NAME}*\n\n"
                f"üì∑ *–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:*\n"
                f"‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π\n"
                f"‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ö\n"
                f"‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º\n\n"
                f"üåê *–ü–µ—Ä–µ–≤–æ–¥:*\n"
                f"‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –±–æ–ª–µ–µ —á–µ–º 100 —è–∑—ã–∫–æ–≤ –º–∏—Ä–∞\n"
                f"‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞\n"
                f"‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —ç–º–æ–¥–∑–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤\n\n"
                f"üîä *–ê—É–¥–∏–æ:*\n"
                f"‚Ä¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å\n"
                f"‚Ä¢ –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞\n"
                f"‚Ä¢ –†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–æ—Ç 0.5x –¥–æ 2.0x)\n\n"
                f"‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏:*\n"
                f"‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
                f"‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏\n"
                f"‚Ä¢ –ò–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∫–Ω–æ–ø–∫–∞–º–∏"
            )
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            query.edit_message_text(
                features_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        
        elif callback_data == "show_help":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –ø–æ –±–æ—Ç—É
            help_text = (
                f"‚ùì *–°–ø—Ä–∞–≤–∫–∞ –ø–æ {APP_NAME}*\n\n"
                f"üìã *–ö–æ–º–∞–Ω–¥—ã:*\n"
                f"‚Ä¢ /start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º\n"
                f"‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É\n"
                f"‚Ä¢ /settings - –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞\n"
                f"‚Ä¢ /language - –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞\n"
                f"‚Ä¢ /audio_language - –í—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è\n"
                f"‚Ä¢ /speed - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ —Ä–µ—á–∏\n\n"
                f"üí° *–°–æ–≤–µ—Ç—ã:*\n"
                f"‚Ä¢ –î–µ–ª–∞–π—Ç–µ —á–µ—Ç–∫–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —Ç–µ–∫—Å—Ç–∞\n"
                f"‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è\n"
                f"‚Ä¢ –î–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä—É—é —Å–∫–æ—Ä–æ—Å—Ç—å\n"
                f"‚Ä¢ –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞\n\n"
                f"üîç *–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:*\n"
                f"‚Ä¢ –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞—ë—Ç—Å—è, —Å–¥–µ–ª–∞–π—Ç–µ –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ñ–æ—Ç–æ\n"
                f"‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–∑—ã–∫–∞\n"
                f"‚Ä¢ –î–ª—è –ª—É—á—à–µ–≥–æ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —è–∑—ã–∫–∏ —Å —Ö–æ—Ä–æ—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
            )
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            query.edit_message_text(
                help_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
            
        elif callback_data == "about_bot":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
            about_text = (
                f"üì± *{APP_NAME} v{APP_VERSION}*\n\n"
                f"ü§ñ *–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞:*\n"
                f"‚Ä¢ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π (OCR)\n"
                f"‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –±–æ–ª–µ–µ —á–µ–º 100 —è–∑—ã–∫–æ–≤\n"
                f"‚Ä¢ –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ —Ä–µ—á—å\n"
                f"‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è\n"
                f"‚Ä¢ –û—Ç–¥–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è\n\n"
                f"üß© *–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:*\n"
                f"‚Ä¢ Tesseract OCR –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞\n"
                f"‚Ä¢ Google Translate –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞\n"
                f"‚Ä¢ gTTS –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ —Ä–µ—á–∏\n\n"
                f"üìÜ –°–æ–∑–¥–∞–Ω: –ú–∞–π 2025\n"
                f"‚öôÔ∏è –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: Replit\n"
                f"üìã –õ–∏—Ü–µ–Ω–∑–∏—è: MIT"
            )
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            keyboard = [[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            query.edit_message_text(
                about_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        
        elif callback_data == "show_audio_languages":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
            show_audio_language_options(update, context)
            
        elif callback_data == "show_voice_types":
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ü–∏–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞
            show_voice_type_options(update, context)
            
        elif callback_data == "back_to_main":
            # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            keyboard = [
                [InlineKeyboardButton("üåü –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞", callback_data="show_features")],
                [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="back_to_settings")],
                [InlineKeyboardButton("üéß –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", callback_data="show_audio_languages")],
                [InlineKeyboardButton("üåé –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞", callback_data="show_languages")],
                [InlineKeyboardButton("üîä –°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏", callback_data="show_speeds")],
                [InlineKeyboardButton("üé§ –¢–∏–ø –≥–æ–ª–æ—Å–∞", callback_data="show_voice_types")],
                [InlineKeyboardButton("‚ÑπÔ∏è –û –±–æ—Ç–µ", callback_data="about_bot")],
                [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å", callback_data="show_help")]
            ]
            
            main_menu_text = (
                f"üîç *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é {APP_NAME}*\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é:\n\n"
                f"‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞\n"
                f"‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –∏ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è\n"
                f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤\n\n"
                f"üìã –í–µ—Ä—Å–∏—è: {APP_VERSION}"
            )
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            query.edit_message_text(
                main_menu_text,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
            
        elif callback_data == "back_to_settings":
            # –í–æ–∑–≤—Ä–∞—Ç –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º
            keyboard = [
                [InlineKeyboardButton("üåé –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞", callback_data="show_languages")],
                [InlineKeyboardButton("üéß –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è", callback_data="show_audio_languages")],
                [InlineKeyboardButton("üîä –ò–∑–º–µ–Ω–∏—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏", callback_data="show_speeds")],
                [InlineKeyboardButton("üé§ –ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø –≥–æ–ª–æ—Å–∞", callback_data="show_voice_types")],
                [InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
            ]
            
            # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —è–∑—ã–∫–æ–≤, —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ç–∏–ø–æ–≤ –≥–æ–ª–æ—Å–∞
            language_emojis = {
                'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
            }
            speed_emojis = {
                0.5: "üê¢", 0.6: "ü¶•", 0.7: "üêå", 0.8: "üêï", 0.9: "üö∂", 
                1.0: "üèÉ", 1.1: "üèÑ", 1.25: "üö¥", 1.5: "üèéÔ∏è", 1.75: "‚úàÔ∏è", 2.0: "üöÄ"
            }
            voice_type_emojis = {
                "normal": "üîä", "slow": "üê¢", "clear": "üîç", "emotional": "üòÄ"
            }
            
            language_code = user_prefs[user_id].language
            language_emoji = language_emojis.get(language_code, 'üåê')
            
            audio_language_code = user_prefs[user_id].audio_language
            audio_language_emoji = language_emojis.get(audio_language_code, 'üéß')
            
            speed = user_prefs[user_id].speed
            speed_emoji = speed_emojis.get(speed, "üîä")
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–∏–ø –≥–æ–ª–æ—Å–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∏–∫–æ–Ω–∫—É
            voice_type = user_prefs[user_id].voice_type
            voice_emoji = voice_type_emojis.get(voice_type, "üé§")
            
            current_settings = (
                f"‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ {APP_NAME}*\n\n"
                f"{language_emoji} *–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞:* {user_prefs[user_id].language_name}\n"
                f"{audio_language_emoji} *–Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è:* {user_prefs[user_id].audio_language_name}\n"
                f"{speed_emoji} *–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏:* {user_prefs[user_id].speed}x\n"
                f"{voice_emoji} *–¢–∏–ø –≥–æ–ª–æ—Å–∞:* {user_prefs[user_id].voice_type_name}\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
            )
            
            reply_markup = InlineKeyboardMarkup(keyboard)
            query.edit_message_text(
                current_settings,
                reply_markup=reply_markup,
                parse_mode='Markdown'
            )
        
        elif callback_data.startswith("lang_"):
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞
            language_code = callback_data[5:]
            languages = get_available_languages()
            language_name = languages.get(language_code, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π")
            
            user_prefs[user_id].update_language(language_code)
            
            # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
            language_emojis = {
                'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
            }
            
            flag_emoji = language_emojis.get(language_code, 'üåê')
            
            query.edit_message_text(
                f"‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã*\n\n"
                f"–Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞: {flag_emoji} *{language_name}*\n\n"
                f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="back_to_settings")]])
            )
        
        elif callback_data.startswith("audio_lang_"):
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
            language_code = callback_data[11:]
            user_prefs[user_id].update_audio_language(language_code)
            
            # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
            language_emojis = {
                'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
            }
            
            flag_emoji = language_emojis.get(language_code, 'üéß')
            
            query.edit_message_text(
                f"‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã*\n\n"
                f"–Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: {flag_emoji} *{user_prefs[user_id].audio_language_name}*\n\n"
                f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="back_to_settings")]])
            )
        
        elif callback_data.startswith("speed_"):
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
            speed = float(callback_data[6:])
            user_prefs[user_id].update_speed(speed)
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
            speed_emojis = {
                0.5: "üê¢", 
                0.6: "ü¶•",
                0.7: "üêå",
                0.8: "üêï",
                0.9: "üö∂", 
                1.0: "üèÉ", 
                1.1: "üèÑ",
                1.25: "üö¥", 
                1.5: "üèéÔ∏è", 
                1.75: "‚úàÔ∏è",
                2.0: "üöÄ"
            }
            
            speed_emoji = speed_emojis.get(speed, "üîä")
            
            query.edit_message_text(
                f"‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã*\n\n"
                f"–°–∫–æ—Ä–æ—Å—Ç—å —Ä–µ—á–∏: {speed_emoji} *{speed}x*\n\n"
                f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="back_to_settings")]])
            )
            
        elif callback_data.startswith("voice_"):
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞
            voice_type = callback_data[6:]
            user_prefs[user_id].update_voice_type(voice_type)
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–æ–≤ –≥–æ–ª–æ—Å–æ–≤
            voice_type_emojis = {
                "normal": "üîä",
                "slow": "üê¢",
                "clear": "üîç",
                "emotional": "üòÄ"
            }
            
            voice_emoji = voice_type_emojis.get(voice_type, "üé§")
            
            query.edit_message_text(
                f"‚úÖ *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã*\n\n"
                f"–¢–∏–ø –≥–æ–ª–æ—Å–∞: {voice_emoji} *{user_prefs[user_id].voice_type_name}*\n\n"
                f"üìù –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ç–µ–∫—Å—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º", callback_data="back_to_settings")]])
            )

    def handle_image(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º."""
        user_id = update.effective_user.id
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if user_id not in user_prefs:
            user_prefs[user_id] = UserPreferences(user_id)
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —ç–º–æ–¥–∑–∏
        processing_message = update.message.reply_text("üîç *–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—à–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...*\n\n" \
                                                      "üß† –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞\n" \
                                                      "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
                                                      parse_mode='Markdown')
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é
            file = context.bot.get_file(photo.file_id)
            
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            with tempfile.NamedTemporaryFile(suffix='.jpg', delete=False) as temp_file:
                temp_path = temp_file.name
            
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            file.download(temp_path)
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç
            extracted_text = extract_text_from_image(temp_path)
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            os.unlink(temp_path)
            
            if not extracted_text:
                processing_message.edit_text("‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç –∏–∑ —ç—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å –±–æ–ª–µ–µ —á–µ—Ç–∫–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º.")
                return
            
            # –Ø–∑—ã–∫ –ø–µ—Ä–µ–≤–æ–¥–∞
            language = user_prefs[user_id].language
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–≤–ª–µ—á–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—Ä—É–µ–º—É—é –≤–µ—Ä—Å–∏—é —Ç–µ–∫—Å—Ç–∞ (–±–µ–∑ –º–∞—Ä–∫–¥–∞—É–Ω–∞ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è)
            copy_keyboard = [
                [InlineKeyboardButton("üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç", callback_data=f"copy_text_{user_id}")]
            ]
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—Å—Ç –≤ —Å–ª–æ–≤–∞—Ä–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            if not hasattr(context, 'user_data'):
                context.user_data = {}
            context.user_data[f"copy_text_{user_id}"] = extracted_text
            
            processing_message.edit_text(
                f"‚úÖ *–¢–µ–∫—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω!*\n\n"
                f"üìÑ *–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:*\n"
                f"```\n{extracted_text}\n```\n\n"
                f"üîç *–ü–µ—Ä–µ–≤–æ–∂—É –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é –∞—É–¥–∏–æ...*",
                parse_mode='Markdown',
                reply_markup=InlineKeyboardMarkup(copy_keyboard)
            )
            
            # –ü–µ—Ä–µ–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç
            translated_text = translate_text(extracted_text, language)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º, –µ—Å–ª–∏ –æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞
            if translated_text != extracted_text:
                # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
                language_emojis = {
                    'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                    'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                    'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
                }
                
                flag_emoji = language_emojis.get(language, 'üåê')
                
                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞
                copy_tr_keyboard = [
                    [InlineKeyboardButton("üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥", callback_data=f"copy_tr_{user_id}")]
                ]
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
                context.user_data[f"copy_tr_{user_id}"] = translated_text
                
                update.message.reply_text(
                    f"üåê *–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!*\n\n"
                    f"{flag_emoji} *–¢–µ–∫—Å—Ç –Ω–∞ —è–∑—ã–∫–µ: {user_prefs[user_id].language_name}*\n"
                    f"```\n{translated_text}\n```",
                    parse_mode='Markdown',
                    reply_markup=InlineKeyboardMarkup(copy_tr_keyboard)
                )
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
            speed = user_prefs[user_id].speed
            audio_language = user_prefs[user_id].audio_language
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
            speed_emojis = {
                0.5: "üê¢", 0.6: "ü¶•", 0.7: "üêå", 0.8: "üêï", 0.9: "üö∂", 
                1.0: "üèÉ", 1.1: "üèÑ", 1.25: "üö¥", 1.5: "üèéÔ∏è", 1.75: "‚úàÔ∏è", 2.0: "üöÄ"
            }
            speed_emoji = speed_emojis.get(speed, "üîä")
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
            language_emojis = {
                'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
            }
            audio_language_emoji = language_emojis.get(audio_language, 'üéß')
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞
            voice_type = user_prefs[user_id].voice_type
            voice_type_emojis = {
                "normal": "üîä",
                "slow": "üê¢",
                "clear": "üîç",
                "emotional": "üòÄ"
            }
            voice_emoji = voice_type_emojis.get(voice_type, "üé§")
            
            audio_msg = update.message.reply_text(
                f"üéµ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞*\n\n"
                f"{speed_emoji} –°–∫–æ—Ä–æ—Å—Ç—å: *{speed}x*\n"
                f"{audio_language_emoji} –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: *{user_prefs[user_id].audio_language_name}*\n"
                f"{voice_emoji} –¢–∏–ø –≥–æ–ª–æ—Å–∞: *{user_prefs[user_id].voice_type_name}*\n\n"
                f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
                parse_mode='Markdown'
            )
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –≤–º–µ—Å—Ç–æ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
            audio_path = text_to_speech(translated_text, audio_language)
            adjusted_audio_path = adjust_audio_speed(audio_path, speed)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
            with open(adjusted_audio_path, 'rb') as audio:
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∞—É–¥–∏–æ
                audio_caption = (
                    f"üéß *–ê—É–¥–∏–æ –≥–æ—Ç–æ–≤–æ!*\n"
                    f"{speed_emoji} –°–∫–æ—Ä–æ—Å—Ç—å: *{speed}x*\n"
                    f"{audio_language_emoji} –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: *{user_prefs[user_id].audio_language_name}*"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –∏ —É–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                update.message.reply_voice(audio, caption=audio_caption, parse_mode='Markdown')
                audio_msg.delete()
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            os.unlink(audio_path)
            os.unlink(adjusted_audio_path)
        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
            processing_message.edit_text(
                f"‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*\n\n"
                f"üîÑ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.\n\n"
                f"üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ```{str(e)}```\n\n"
                f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –±–æ–ª–µ–µ —á–µ—Ç–∫–∏–º —Ç–µ–∫—Å—Ç–æ–º.",
                parse_mode='Markdown'
            )

    def handle_text(update, context):
        """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        user_id = update.effective_user.id
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if user_id not in user_prefs:
            user_prefs[user_id] = UserPreferences(user_id)
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç
        text = update.message.text
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
        if text.startswith('/'):
            return
        
        # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
        processing_message = update.message.reply_text(
            "üîç *–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∞—à–µ–≥–æ —Ç–µ–∫—Å—Ç–∞...*\n\n"
            "üåê –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞\n"
            "üéµ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–∏–Ω—Ç–µ–∑—É —Ä–µ—á–∏\n"
            "‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
            parse_mode='Markdown'
        )
        
        try:
            # –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
            language = user_prefs[user_id].language
            translated_text = translate_text(text, language)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥ —Å –∫—Ä–∞—Å–∏–≤—ã–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
            
            # –°–ª–æ–≤–∞—Ä—å –¥–ª—è –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –∏ –∏—Ö —ç–º–æ–¥–∑–∏
            language_emojis = {
                'en': 'üá¨üáß', 'ru': 'üá∑üá∫', 'fr': 'üá´üá∑', 'de': 'üá©üá™', 'es': 'üá™üá∏', 
                'it': 'üáÆüáπ', 'zh-CN': 'üá®üá≥', 'ja': 'üáØüáµ', 'ko': 'üá∞üá∑', 'ar': 'üá∏üá¶',
                'pt': 'üáµüáπ', 'tr': 'üáπüá∑', 'hi': 'üáÆüá≥', 'nl': 'üá≥üá±', 'pl': 'üáµüá±'
            }
            
            flag_emoji = language_emojis.get(language, 'üåê')
            
            if translated_text != text:
                processing_message.edit_text(
                    f"üåê *–ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω!*\n\n"
                    f"{flag_emoji} *–¢–µ–∫—Å—Ç –Ω–∞ —è–∑—ã–∫–µ: {user_prefs[user_id].language_name}*\n"
                    f"```\n{translated_text}\n```\n\n"
                    f"üéµ *–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∞—É–¥–∏–æ–≤–µ—Ä—Å–∏—é...*",
                    parse_mode='Markdown'
                )
            else:
                processing_message.edit_text(
                    f"‚úÖ *–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞*\n\n"
                    f"{flag_emoji} –Ø–∑—ã–∫: *{user_prefs[user_id].language_name}*\n"
                    f"üéµ *–ì–µ–Ω–µ—Ä–∏—Ä—É—é –∞—É–¥–∏–æ–≤–µ—Ä—Å–∏—é...*",
                    parse_mode='Markdown'
                )
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—É–¥–∏–æ
            speed = user_prefs[user_id].speed
            audio_language = user_prefs[user_id].audio_language
            
            # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∞—É–¥–∏–æ
            audio_msg = update.message.reply_text(
                f"üéµ *–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞—É–¥–∏–æ—Ñ–∞–π–ª–∞*\n\n"
                f"‚öôÔ∏è –°–∫–æ—Ä–æ—Å—Ç—å: *{speed}x*\n"
                f"üîä –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: *{user_prefs[user_id].audio_language_name}*\n\n"
                f"‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...",
                parse_mode='Markdown'
            )
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º —è–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è –≤–º–µ—Å—Ç–æ —è–∑—ã–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞
            audio_path = text_to_speech(translated_text, audio_language)
            adjusted_audio_path = adjust_audio_speed(audio_path, speed)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å—å—é
            
            # –≠–º–æ–¥–∑–∏ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
            speed_emojis = {
                0.5: "üê¢", 
                0.75: "üö∂", 
                1.0: "üèÉ", 
                1.25: "üö¥", 
                1.5: "üèéÔ∏è", 
                2.0: "üöÄ"
            }
            speed_emoji = speed_emojis.get(speed, "üîä")
            
            # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —è–∑—ã–∫–∞ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è
            audio_language_emoji = language_emojis.get(audio_language, 'üéß')
            
            with open(adjusted_audio_path, 'rb') as audio:
                # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–ø–∏—Å—å –∫ –∞—É–¥–∏–æ
                audio_caption = (
                    f"üéß *–ê—É–¥–∏–æ –≥–æ—Ç–æ–≤–æ!*\n"
                    f"{speed_emoji} –°–∫–æ—Ä–æ—Å—Ç—å: *{speed}x*\n"
                    f"{audio_language_emoji} –Ø–∑—ã–∫ –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è: *{user_prefs[user_id].audio_language_name}*"
                )
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—É–¥–∏–æ –∏ —É–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
                update.message.reply_voice(audio, caption=audio_caption, parse_mode='Markdown')
                audio_msg.delete()
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            os.unlink(audio_path)
            os.unlink(adjusted_audio_path)
        
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ç–µ–∫—Å—Ç–∞: {e}")
            processing_message.edit_text(
                f"‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!*\n\n"
                f"üîÑ –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–µ–∫—Å—Ç.\n\n"
                f"üìã –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: ```{str(e)}```\n\n"
                f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
                parse_mode='Markdown'
            )

    # –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–æ—Ç–∞
    token = os.environ.get('TELEGRAM_BOT_TOKEN')
    if not token:
        print("\033[91m–û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\033[0m")
        return 1
    updater = Updater(token=token, use_context=True)
    dispatcher = updater.dispatcher
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    dispatcher.add_handler(CommandHandler("start", start_command))
    dispatcher.add_handler(CommandHandler("help", help_command))
    dispatcher.add_handler(CommandHandler("settings", settings_command))
    dispatcher.add_handler(CommandHandler("language", language_command))
    dispatcher.add_handler(CommandHandler("audio_language", audio_language_command))
    dispatcher.add_handler(CommandHandler("speed", speed_command))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
    dispatcher.add_handler(CallbackQueryHandler(handle_button))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    dispatcher.add_handler(MessageHandler(Filters.photo, handle_image))
    dispatcher.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_text))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("\033[92m‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\033[0m")
    print(f"\033[92m‚îÇ   –ó–∞–ø—É—Å–∫ {APP_NAME} v{APP_VERSION}   ‚îÇ\033[0m")
    print("\033[92m‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\033[0m")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long-polling
    updater.start_polling()
    
    print("\033[92m‚úì –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!\033[0m")
    print("\033[93m‚Üí –ù–∞–π–¥–∏—Ç–µ —Å–≤–æ–µ–≥–æ –±–æ—Ç–∞ –≤ Telegram\033[0m")
    print("\033[93m‚Üí –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start\033[0m")
    print("\033[94m‚Üí –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C\033[0m")
    print("\033[95m‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\033[0m")
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ idle()
    updater.idle()
    
    return 0

if __name__ == "__main__":
    sys.exit(main())